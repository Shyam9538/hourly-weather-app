{"ast":null,"code":"import _defineProperty from\"/Users/shyam/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _asyncToGenerator from\"/Users/shyam/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/Users/shyam/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/shyam/my-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/Users/shyam/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/Users/shyam/my-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/shyam/my-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _regeneratorRuntime from\"/Users/shyam/my-app/node_modules/@babel/runtime/regenerator/index.js\";import Header from'./components/Header';import Cover from'./components/Cover';import Hourly from'./components/Hourly';import\"weather-icons/css/weather-icons.css\";import React from'react';import'./index.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var apiKey=\"99b18679f80c7f3071e7cadc69fd777f\";//There is a class here with a constructor, where the variables are decalared and set to undefined.\nvar App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this$state;var _this;_classCallCheck(this,App);_this=_super.call(this);_this.getWeather=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(props){var apiCall,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(_this.state.city,\"&appid=\").concat(apiKey));case 2:apiCall=_context.sent;_context.next=5;return apiCall.json().then(function(response){_this.setState({city:response.name,country:response.sys.country,temp_max:_this.calCelsius(response.main.temp_max),temp_min:_this.calCelsius(response.main.temp_min),description:response.weather[0].description,lat:response.coord.lat,lng:response.coord.lon});_this.getWeather2(response.coord.lat,response.coord.lon);_this.get_WeatherIcon(_this.weatherIcon,response.weather[0].id);});case 5:response=_context.sent;console.log(\"BLAH\");console.log(_this.state.lat);_this.setState();case 9:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.getWeather2=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(lat1,long1){var apiCall2,response2;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(long1,lat1);_context2.next=3;return fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\".concat(lat1,\"&lon=\").concat(long1,\"&exclude=minutely,daily&appid=\").concat(apiKey));case 3:apiCall2=_context2.sent;_context2.next=6;return apiCall2.json();case 6:response2=_context2.sent;console.log(_this.response2);_this.setState({hourly:response2.hourly.slice(0,24)});console.log(_this.state);_this.uvIntensity(response2.current.uvi);_this.cloudCover(response2.current.clouds);_this.hourTemp(response2.hourly[0].weather[0].id);case 13:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2,_x3){return _ref2.apply(this,arguments);};}();_this.state=(_this$state={city:undefined,country:undefined,icon:undefined,icon1:undefined,main:undefined,celcius:undefined,temp_max:undefined,temp_min:undefined,uv:undefined,cover:undefined,description:\"\",description2:\"\",description3:\"\",error:false,dt:undefined},_defineProperty(_this$state,\"city\",\"London\"),_defineProperty(_this$state,\"lat\",undefined),_defineProperty(_this$state,\"lng\",undefined),_defineProperty(_this$state,\"hourly\",[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]),_this$state);_this.onInputchange=_this.onInputchange.bind(_assertThisInitialized(_this));_this.onSubmitForm=_this.onSubmitForm.bind(_assertThisInitialized(_this));// console.log(this.state)\n//     if (!typeof this.state.lat===\"undefined\"){\n//     this.getWeather2(this.state.lat, this.state.long);\n// }\n_this.weatherIcon={Thunderstorm:\"wi-thunderstorm\",Drizzle:\"wi-sleet\",Rain:\"wi-storm-showers\",Snow:\"wi-snow\",Atmosphere:\"wi-fog\",Clear:\"wi-day-sunny\",Clouds:\"wi-day-fog\"};_this.intensity={Low:\"Low\",Medium:\"Medium\",High:\"High\",VeryHigh:\"High\",Unknown:\"Unknown\"};return _this;}//This method here calls the getWeather method.\n_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.getWeather();console.log(this.state);}//This method allows the state to be changed.\n},{key:\"onInputchange\",value:function onInputchange(event){this.setState(_defineProperty({},event.target.name,event.target.value));}//This method call the getWeather method on the form submit.\n},{key:\"onSubmitForm\",value:function onSubmitForm(){console.log(this.state);this.getWeather();}//This method here allows for kelvin data provided by the API into celcius. \n},{key:\"calCelsius\",value:function calCelsius(temp){var cell=Math.floor(temp-273.15);return cell;}//This method here allow for the cloud cover data to be converted into text values like low medium and high using a switch and cases.\n},{key:\"cloudCover\",value:function cloudCover(cover){switch(true){case cover>=0&&cover<33:this.setState({description2:this.intensity.Low});break;case cover>=33&&cover<66:this.setState({description2:this.intensity.Medium});break;case cover>=66&&cover<=100:this.setState({description2:this.intensity.High});break;default:this.setState({description2:this.intensity.Unknown});}}//This method here allows for the UV intensity to be converted from a number into a value using a switch and case statements. \n},{key:\"uvIntensity\",value:function uvIntensity(uvIntense){switch(true){case uvIntense>=0&&uvIntense<2:this.setState({description3:this.intensity.Low});break;case uvIntense>=2&&uvIntense<=7:this.setState({description3:this.intensity.Medium});break;case uvIntense>=7&&uvIntense<11:this.setState({description3:this.intensity.High});break;case uvIntense>11:this.setState({description3:this.intensity.VeryHigh});break;default:this.setState({description3:this.intensity.Unknown});}}//This method here allows for the weather icon to be decided based on the rangeid of the method.\n},{key:\"get_WeatherIcon\",value:function get_WeatherIcon(icons,rangeId){switch(true){case rangeId>=200&&rangeId<=232:this.setState({icon:this.weatherIcon.Thunderstorm});break;case rangeId>=300&&rangeId<=321:return this.weatherIcon.Drizzle;case rangeId>=500&&rangeId<=531:this.setState({icon:this.weatherIcon.Rain});break;case rangeId>=600&&rangeId<=622:this.setState({icon:this.weatherIcon.Snow});break;case rangeId>=701&&rangeId<=781:this.setState({icon:this.weatherIcon.Atmosphere});break;case rangeId===800:this.setState({icon:this.weatherIcon.Clear});break;case rangeId>=801&&rangeId<=804:this.setState({icon:this.weatherIcon.Clouds});break;default:this.setState({icon:this.weatherIcon.Clouds});}}//These methods here allow for the calculations to be made, such as deciding which icon to display based on the id of the weather, or displaying the levels of cloud cover or uv.\n},{key:\"hourTemp\",value:function hourTemp(rangeId){for(var index=1;index<24;index++){switch(true){case rangeId>=200&&rangeId<=232:return this.weatherIcon.Thunderstorm;case rangeId>=300&&rangeId<=321:return this.weatherIcon.Drizzle;case rangeId>=500&&rangeId<=531:return this.weatherIcon.Rain;case rangeId>=600&&rangeId<=622:return this.weatherIcon.Snow;case rangeId>=701&&rangeId<=781:return this.weatherIcon.Atmosphere;case rangeId===800:return this.weatherIcon.Clear;case rangeId>=801&&rangeId<=804:return this.weatherIcon.Clouds;default:return this.weatherIcon.Clouds;}}}//This method fetches the data from the API call cand then sets it to the variable in the constructor, which initialises it.\n},{key:\"render\",value://The render here allows for the variables to be used in the other components, and this data is passed through these variables.\nfunction render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"form\",{className:\"form1\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"cityName h1 mainTitle\",children:\"Hourly Weather Forecast App\"}),/*#__PURE__*/_jsx(\"p\",{className:\"cityName h1\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Please enter a city below:\"})}),/*#__PURE__*/_jsx(\"input\",{className:\"input\",type:\"text\",name:\"city\",value:this.state.city,onChange:this.onInputchange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"button2 btn btn-outline-light\",onClick:function onClick(){_this2.onSubmitForm();document.getElementById('middle').scrollIntoView(true);},placeholder:\"Please enter a city\",children:\"Submit\"}),/*#__PURE__*/_jsx(\"script\",{}),/*#__PURE__*/_jsx(\"h1\",{id:\"middle\"}),/*#__PURE__*/_jsx(Header,{city:this.state.city,country:this.state.country,temp_max:this.state.temp_max,temp_min:this.state.temp_min,description:this.state.description,weatherIcon:this.state.icon}),/*#__PURE__*/_jsx(Cover,{uv:this.state.uv,description2:this.state.description2,description3:this.state.description3,cover:this.state.cover}),/*#__PURE__*/_jsx(Hourly,{hourly:this.state.hourly,weatherIcon:this.state.icon1,dt:this.state.dt,hourTemp:this.hourTemp,lat:this.state.lat,lng:this.state.lng})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/shyam/my-app/src/App.js"],"names":["Header","Cover","Hourly","React","apiKey","App","getWeather","props","fetch","state","city","apiCall","json","then","response","setState","name","country","sys","temp_max","calCelsius","main","temp_min","description","weather","lat","coord","lng","lon","getWeather2","get_WeatherIcon","weatherIcon","id","console","log","lat1","long1","apiCall2","response2","hourly","slice","uvIntensity","current","uvi","cloudCover","clouds","hourTemp","undefined","icon","icon1","celcius","uv","cover","description2","description3","error","dt","onInputchange","bind","onSubmitForm","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","intensity","Low","Medium","High","VeryHigh","Unknown","event","target","value","temp","cell","Math","floor","uvIntense","icons","rangeId","index","document","getElementById","scrollIntoView","Component"],"mappings":"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","sourcesContent":["import Header from './components/Header';\nimport Cover from './components/Cover';\nimport Hourly from './components/Hourly';\nimport \"weather-icons/css/weather-icons.css\";\nimport React from 'react';\nimport './index.css'\n\n\n\n \nconst apiKey=\"99b18679f80c7f3071e7cadc69fd777f\";\n\n\n\n//There is a class here with a constructor, where the variables are decalared and set to undefined.\nclass App extends React.Component{\n    \n    constructor(){\n        super();\n        this.state={\n            city:undefined,\n            country: undefined,\n            icon:undefined,\n            icon1:undefined,\n            main:undefined,\n            celcius:undefined,\n            temp_max:undefined,\n            temp_min:undefined,\n            uv:undefined,\n            cover:undefined,\n            description:\"\",\n            description2:\"\",\n            description3:\"\",\n            error:false,\n            dt:undefined,\n            city: \"London\",\n            lat:undefined,\n            lng:undefined,\n            hourly:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]\n        };\n        \n        \n        this.onInputchange = this.onInputchange.bind(this);\n        this.onSubmitForm = this.onSubmitForm.bind(this);\n       \n        \n        // console.log(this.state)\n        //     if (!typeof this.state.lat===\"undefined\"){\n        //     this.getWeather2(this.state.lat, this.state.long);\n        // }\n\n\n\n        this.weatherIcon = {\n            Thunderstorm: \"wi-thunderstorm\",\n            Drizzle: \"wi-sleet\",\n            Rain : \"wi-storm-showers\",\n            Snow: \"wi-snow\",\n            Atmosphere : \"wi-fog\",\n            Clear : \"wi-day-sunny\",\n            Clouds: \"wi-day-fog\"            \n           };\n        \n        this.intensity = {\n            Low: \"Low\",\n            Medium: \"Medium\",\n            High: \"High\",\n            VeryHigh: \"High\",\n            Unknown: \"Unknown\"\n        }\n\n   \n    }\n\n//This method here calls the getWeather method.\n  componentDidMount(){\n      this.getWeather();\n      console.log(this.state)\n  }\n\n  //This method allows the state to be changed.\n  onInputchange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  //This method call the getWeather method on the form submit.\n  onSubmitForm() {\n    console.log(this.state)\n    this.getWeather();\n  }\n\n  \n    \n    //This method here allows for kelvin data provided by the API into celcius. \n    calCelsius(temp){\n        let cell = Math.floor(temp - 273.15);\n        return cell;\n       }\n\n    //This method here allow for the cloud cover data to be converted into text values like low medium and high using a switch and cases.\n    cloudCover(cover){\n        switch (true) {\n            case cover >= 0 && cover < 33:\n                this.setState({ description2: this.intensity.Low});\n                break;\n            case cover >= 33 && cover < 66:\n                this.setState({ description2: this.intensity.Medium });\n                break;\n            case cover >= 66 && cover <= 100:\n                this.setState({ description2: this.intensity.High });\n                break;\n            default:\n                this.setState({description2: this.intensity.Unknown});\n       }\n    }\n\n    //This method here allows for the UV intensity to be converted from a number into a value using a switch and case statements. \n    uvIntensity(uvIntense){\n        switch (true) {\n            case uvIntense >= 0 && uvIntense < 2:\n                this.setState({ description3: this.intensity.Low});\n                break;\n            case uvIntense >= 2 && uvIntense <= 7:\n                this.setState({ description3: this.intensity.Medium });\n                break;\n            case uvIntense >= 7 && uvIntense < 11:\n                this.setState({ description3: this.intensity.High });\n                break;\n            case uvIntense > 11:\n                this.setState({ description3: this.intensity.VeryHigh });\n                break;\n            default:\n                this.setState({description3: this.intensity.Unknown});\n       }\n    }\n       \n    //This method here allows for the weather icon to be decided based on the rangeid of the method.\n    get_WeatherIcon(icons, rangeId) {\n        switch (true) {\n            case rangeId >= 200 && rangeId <= 232:\n                this.setState({ icon: this.weatherIcon.Thunderstorm});\n                break;\n            case rangeId >= 300 && rangeId <= 321:\n                return this.weatherIcon.Drizzle\n            case rangeId >= 500 && rangeId <= 531:\n                this.setState({ icon: this.weatherIcon.Rain });\n                break;\n            case rangeId >= 600 && rangeId <= 622:\n                this.setState({icon: this.weatherIcon.Snow});\n                break;\n            case rangeId >= 701 && rangeId <= 781:\n                this.setState({icon: this.weatherIcon.Atmosphere});\n                break;\n            case rangeId === 800:\n                this.setState({icon: this.weatherIcon.Clear});\n                break;\n            case rangeId >= 801 && rangeId <= 804:\n                this.setState({icon: this.weatherIcon.Clouds});\n                break;\n            default:\n                this.setState({icon: this.weatherIcon.Clouds});\n        }\n    }\n\n    //These methods here allow for the calculations to be made, such as deciding which icon to display based on the id of the weather, or displaying the levels of cloud cover or uv.\n    hourTemp(rangeId){\n        for (let index = 1; index < 24; index++) {\n            switch (true) {\n                case rangeId >= 200 && rangeId <= 232:\n                    return this.weatherIcon.Thunderstorm\n                case rangeId >= 300 && rangeId <= 321:\n                    return this.weatherIcon.Drizzle\n                case rangeId >= 500 && rangeId <= 531:\n                    return this.weatherIcon.Rain\n                case rangeId >= 600 && rangeId <= 622:\n                    return this.weatherIcon.Snow\n                case rangeId >= 701 && rangeId <= 781:\n                    return this.weatherIcon.Atmosphere\n                case rangeId === 800:\n                    return this.weatherIcon.Clear\n                case rangeId >= 801 && rangeId <= 804:\n                    return this.weatherIcon.Clouds;\n                default:\n                    return this.weatherIcon.Clouds;\n            }\n        }\n    }\n\n\n    //This method fetches the data from the API call cand then sets it to the variable in the constructor, which initialises it.\n    getWeather=async(props)=>{\n        const apiCall= await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${apiKey}`);\n        const response= await apiCall.json().then((response)=>{\n            this.setState({\n                city : response.name,\n                country: response.sys.country,\n                temp_max: this.calCelsius(response.main.temp_max),\n                temp_min: this.calCelsius(response.main.temp_min),\n                description: response.weather[0].description,\n                lat:response.coord.lat,\n                lng:response.coord.lon\n                \n                \n               });\n            this.getWeather2(response.coord.lat, response.coord.lon)\n            this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n\n        })\n        \n            console.log(\"BLAH\");\n           console.log(this.state.lat)\n           this.setState();\n           \n    };\n\n    //This method fetches the data from the second API call and sets the value to the variable in the constructor, which initialises it.\n    getWeather2=async(lat1, long1)=>{\n        console.log(long1, lat1)\n\n        const apiCall2= await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat1}&lon=${long1}&exclude=minutely,daily&appid=${apiKey}`);\n        const response2= await apiCall2.json();\n        console.log(this.response2)\n        this.setState({\n            hourly:response2.hourly.slice(0,24)\n        });\n        console.log(this.state)\n           this.uvIntensity(response2.current.uvi)\n           this.cloudCover(response2.current.clouds)\n           this.hourTemp(response2.hourly[0].weather[0].id);\n           \n    };\n\n    //The render here allows for the variables to be used in the other components, and this data is passed through these variables.\n    render(){\n        return(\n            \n            <div className='App'> \n            <form className='form1'>\n             \n            <h1 className='cityName h1 mainTitle'>Hourly Weather Forecast App</h1>\n            <p className='cityName h1'><h1>Please enter a city below:</h1></p>\n            <input className='input' type=\"text\"\n            name=\"city\"\n            value={this.state.city}\n            onChange={this.onInputchange}\n          />\n      </form>\n      <br></br>\n      <button className='button2 btn btn-outline-light' onClick={() => {\n          this.onSubmitForm();\n          document.getElementById('middle').scrollIntoView(true)\n        }} placeholder=\"Please enter a city\">Submit</button>\n      <script>\n      \n      \n\n</script>  \n      <h1 id=\"middle\"></h1>\n            <Header\n            city={this.state.city} \n            country={this.state.country}\n            temp_max={this.state.temp_max}\n            temp_min={this.state.temp_min}\n            description={this.state.description}\n            weatherIcon={this.state.icon}\n            />\n            <Cover \n            uv={this.state.uv}\n            description2={this.state.description2}\n            description3={this.state.description3}\n            cover={this.state.cover}\n            />\n\n            <Hourly\n            hourly={this.state.hourly}\n            weatherIcon={this.state.icon1}\n            dt={this.state.dt}\n            hourTemp={this.hourTemp}\n            lat={this.state.lat}\n            lng={this.state.lng}\n            />\n            \n        </div> \n        );\n    }\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}